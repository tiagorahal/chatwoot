version: '3'


services:
 base: &base
   build:
     context: .
     dockerfile: ./docker/Dockerfile
     args:
       BUNDLE_WITHOUT: ''
       EXECJS_RUNTIME: 'Node'
       RAILS_ENV: 'development'
       RAILS_SERVE_STATIC_FILES: 'false'
   tty: true
   stdin_open: true
   image: chatwoot:development
   env_file: .env


 rails:
   <<: *base
   build:
     context: .
     dockerfile: ./docker/dockerfiles/rails.Dockerfile
   image: chatwoot-rails:development
   volumes:
     - ./:/app:delegated
     - node_modules:/app/node_modules
     - packs:/app/public/packs
     - cache:/app/tmp/cache
     - bundle:/usr/local/bundle
   depends_on:
     - postgres
     - redis
     - webpack
     - mailhog
     - sidekiq
   ports:
     - 3000:3000
   env_file: .env
   environment:
     - WEBPACKER_DEV_SERVER_HOST=webpack
     - NODE_ENV=development
     - RAILS_ENV=development
   entrypoint: docker/entrypoints/rails.sh
   command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]


 sidekiq:
   <<: *base
   image: chatwoot-rails:development
   volumes:
     - ./:/app:delegated
     - node_modules:/app/node_modules
     - packs:/app/public/packs
     - cache:/app/tmp/cache
     - bundle:/usr/local/bundle
   depends_on:
     - postgres
     - redis
     - mailhog
   environment:
     - NODE_ENV=development
     - RAILS_ENV=development
     - REDIS_URL=redis://redis:6379  # Use the same Redis URL as specified in the env
     - REDIS_PASSWORD=${REDIS_PASSWORD}  # Pass the Redis password from the .env file
   command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]


 webpack:
   <<: *base
   build:
     context: .
     dockerfile: ./docker/dockerfiles/webpack.Dockerfile
   image: chatwoot-webpack:development
   volumes:
     - ./:/app:delegated
     - node_modules:/app/node_modules # Node modules shared across containers
     - packs:/app/public/packs
     - cache:/app/tmp/cache
     - bundle:/usr/local/bundle
   ports:
     - "3035" # Webpack dev server
   environment:
     - NODE_OPTIONS=--openssl-legacy-provider
     - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
     - NODE_ENV=development
     - RAILS_ENV=development
   entrypoint: docker/entrypoints/webpack.sh
   command: bin/webpack-dev-server


 postgres:
   image: postgres:12
   restart: always
   ports:
     - '5433:5432'  # Host port changed from 5432 to 5433
   volumes:
     - postgres:/data/postgres
   environment:
     - POSTGRES_DB=${POSTGRES_DATABASE}
     - POSTGRES_USER=${POSTGRES_USERNAME}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}


 redis:
   image: redis:alpine
   restart: always
   command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
   env_file: .env
   volumes:
     - redis:/data/redis
   ports:
     - '6380:6379'  # Host port changed from 6379 to 6380


 mailhog:
   image: mailhog/mailhog
   ports:
     - 1025:1025
     - 8025:8025


volumes:
 postgres:
 redis:
 packs:
 node_modules:
 cache:
 bundle:



